import 'package:flutter/material.dart';
import '../widgets/login_widget.dart'; // Ensure this path is correct

class LoginPage extends StatelessWidget {
  final void Function()? onTap;

  const LoginPage({super.key, required this.onTap});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[200],
      body: SafeArea(
        child: GridView.count(
          crossAxisCount: 2,
          padding: const EdgeInsets.all(8.0),
          mainAxisSpacing: 8.0,
          crossAxisSpacing: 8.0,
          childAspectRatio: 5 / 8, // Keep the aspect ratio for all cells
          children: <Widget>[
            // --- Cell 1: Login Widget ---
            Container(
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(12),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.1),
                    spreadRadius: 1,
                    blurRadius: 5,
                    offset: const Offset(0, 3),
                  ),
                ],
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(12.0), // Match the container's radius
                child: LoginWidget( // Make sure LoginWidget is imported correctly
                  onTap: onTap,
                ),
              ),
            ),

            // --- Cell 2: Image Asset Placeholder ---
            _buildImageAssetPlaceholder('assets/CON - 01.jpg'), // Use new helper

            // --- Cell 3: Image Asset Placeholder ---
            _buildImageAssetPlaceholder('assets/CON - 02.jpg'), // Use new helper

            // --- Cell 4: Image Asset Placeholder ---
            _buildImageAssetPlaceholder('assets/CON - 03.jpg'), // Use new helper

            // --- Cell 5: Original Color Placeholder ---
            _buildColorPlaceholder(Colors.deepOrange, 'Image 4'), // Use original helper

            // --- Cell 6: Original Color Placeholder ---
            _buildColorPlaceholder(Colors.purple, 'Image 5'), // Use original helper
          ],
        ),
      ),
    );
  }

  // --- NEW Helper widget for IMAGE ASSET placeholders ---
  Widget _buildImageAssetPlaceholder(String imagePath) {
    // This container will be forced into the 5/8 aspect ratio by the GridView
    return Container(
      decoration: BoxDecoration(
        // Optional: Add a background color while the image loads or if it fails
        color: Colors.grey[300], // A light grey background
        borderRadius: BorderRadius.circular(12),
      ),
      child: ClipRRect( // Clip the image to the rounded corners
        borderRadius: BorderRadius.circular(12),
        child: Image.asset(
          imagePath,
          fit: BoxFit.cover, // Cover the container, might crop the image
          // Optional: Add error handling
          errorBuilder: (context, error, stackTrace) {
            print("Error loading asset: $imagePath\n$error");
            return Container( // Fallback placeholder on error
                decoration: BoxDecoration(
                  color: Colors.red.shade100,
                  borderRadius: BorderRadius.circular(12),
                ),
                child: const Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Icon(Icons.broken_image, color: Colors.red),
                      SizedBox(height: 4),
                      Padding(
                        padding: EdgeInsets.symmetric(horizontal: 4.0),
                        child: Text(
                          "Error",
                          textAlign: TextAlign.center,
                          style: TextStyle(color: Colors.red, fontSize: 10),
                        ),
                      ),
                    ],
                  ),
                ));
          },
          // Optional: Add a loading indicator (fade-in effect)
          frameBuilder: (context, child, frame, wasSynchronouslyLoaded) {
            if (wasSynchronouslyLoaded) {
              return child;
            }
            return AnimatedOpacity(
              opacity: frame == null ? 0 : 1,
              duration: const Duration(milliseconds: 500), // Adjust duration as needed
              curve: Curves.easeOut,
              child: child,
            );
          },
        ),
      ),
    );
  }


  // --- RENAMED original Helper widget for COLOR placeholders ---
  Widget _buildColorPlaceholder(Color color, String text) {
    // This container will be forced into the 5/8 aspect ratio by the GridView
    return Container(
      decoration: BoxDecoration(
        color: color,
        borderRadius: BorderRadius.circular(12),
      ),
      child: Center(
        child: Text(
          text,
          style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
      ),
    );
  }
}